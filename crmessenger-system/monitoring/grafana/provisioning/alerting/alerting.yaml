apiVersion: 1

contactPoints:
  - orgId: 1
    name: telegram
    receivers:
      - uid: telegram-bot
        type: telegram
        settings:
          bottoken: ${TELEGRAM_BOT_TOKEN}
          chatid: ${TELEGRAM_CHAT_ID}
          parse_mode: HTML
          disable_web_page_preview: true
        disableResolveMessage: false

  - orgId: 1
    name: email-team
    receivers:
      - uid: email-team
        type: email
        settings:
          addresses: team@example.com;oncall@example.com
          singleEmail: false
        disableResolveMessage: false

policies:
  - orgId: 1
    receiver: telegram
    group_by: ['alertname', 'cluster', 'service']
    group_wait: 30s
    group_interval: 5m
    repeat_interval: 12h
    routes:
      - receiver: telegram
        object_matchers:
          - ['severity', '=', 'critical']
        continue: true
        group_wait: 10s
        group_interval: 1m
        repeat_interval: 1h

      - receiver: email-team
        object_matchers:
          - ['severity', '=', 'warning']
        continue: false
        group_wait: 5m
        group_interval: 10m
        repeat_interval: 4h

muteTimings:
  - orgId: 1
    name: weekends
    time_intervals:
      - times:
          - start_time: '00:00'
            end_time: '23:59'
        weekdays: ['saturday', 'sunday']

templates:
  - orgId: 1
    name: telegram-template
    template: |
      {{ define "telegram.title" }}
      ðŸš¨ {{ .Status | toUpper }} {{ if eq .Status "firing" }}({{ .Alerts.Firing | len }}){{ end }}
      {{ end }}
      
      {{ define "telegram.text" }}
      {{ range .Alerts }}
      <b>{{ .Labels.alertname }}</b>
      {{ range .Labels.SortedPairs }}{{ if ne .Name "alertname" }}
      <i>{{ .Name }}:</i> {{ .Value }}
      {{ end }}{{ end }}
      {{ if .Annotations.summary }}<b>Summary:</b> {{ .Annotations.summary }}{{ end }}
      {{ if .Annotations.description }}<b>Details:</b> {{ .Annotations.description }}{{ end }}
      <b>Value:</b> {{ .Values }}
      {{ end }}
      {{ end }}